buildscript {
    ext {
        springBoot_version = '2.1.7.RELEASE'
        mysql_connector_version = '8.0.17'
        liquibase_version = '3.7.0'
        javassist_version = '3.25.0-GA'
        jaxb_version = '2.3.2'
        lombok_version = '1.18.4'
        mapstruct_version = '1.3.0.Final'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBoot_version}")
    }
}

group 'com.littlejohnny'
version '1.0-SNAPSHOT'

configure(allprojects) {
    apply plugin: 'idea'
    apply plugin: 'java'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }
}

configure(allprojects - project(':utils')) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    
    ext {
        springCloud_version = 'Greenwich.SR2'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloud_version}"
        }
    }

    dependencies {
        implementation("org.springframework.boot:spring-boot-starter")
        implementation("org.glassfish.jaxb:jaxb-runtime:${jaxb_version}")
        testImplementation("org.springframework.boot:spring-boot-starter-test")
        compileOnly("org.projectlombok:lombok:${lombok_version}")
        annotationProcessor("org.projectlombok:lombok:${lombok_version}")
    }
}

configure([project(":operation-service"), project(":order-service"), project(":product-service")]) {

    configurations {
        liquibase
    }
    
    dependencies {
        implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
        implementation("org.springframework.boot:spring-boot-starter-data-jpa")
        implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure")
        implementation("org.springframework.cloud:spring-cloud-starter-openfeign")
        implementation("org.springframework.cloud:spring-cloud-starter-security")
        implementation("org.springframework.cloud:spring-cloud-starter-config")
        implementation("org.springframework.boot:spring-boot-starter-web")
        implementation("org.mapstruct:mapstruct:${mapstruct_version}")
        annotationProcessor("org.mapstruct:mapstruct-processor:${mapstruct_version}")
        implementation("mysql:mysql-connector-java:${mysql_connector_version}")
        implementation("org.liquibase:liquibase-core:${liquibase_version}")
        implementation("org.javassist:javassist:${javassist_version}")
        
        implementation project(":utils")

        liquibase ("org.liquibase:liquibase-core:${liquibase_version}")
        liquibase ("mysql:mysql-connector-java:${mysql_connector_version}")
    }
}