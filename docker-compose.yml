version: '3.7'

networks:
  mp-network:

services:

  auth_db:
    container_name: auth_db-server
    image: mysql/mysql-server:8.0.13
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cred_db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    expose:
      - 3306
    networks:
      - mp-network
    tty:
      true

    prod_db:
      container_name: prod_db-server
      image: mysql/mysql-server:8.0.13
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=cred_db
        - MYSQL_USER=admin
        - MYSQL_PASSWORD=admin
      expose:
        - 3306
      networks:
        - mp-network
      tty:
        true

  config-server:
    container_name: config-server
    build:
      context: ./config
      dockerfile: Dockerfile
      args:
        jarName: config
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: config-server:latest
    environment:
      - DISCOVERY_HOST=discovery-server
      - DISCOVERY_PORT=8761
    expose:
      - 8888
    networks:
      - mp-network
    tty:
      true

  discovery-server:
    container_name: discovery-server
    build:
      context: ./discovery
      dockerfile: Dockerfile
      args:
        jarName: discovery
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: discovery-server:latest
    environment:
      - CONFIG_HOST=config-server
      - CONFIG_PORT=8888
    expose:
      - 8761
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-server

  gateway:
    container_name: gateway-server
    build:
      context: ./gateway
      dockerfile: Dockerfile
      args:
        jarName: gateway
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: gateway-server:latest
    environment:
    - DISCOVERY_HOST=discovery-server
    - DISCOVERY_PORT=8761
    - AUTH_HOST=auth-server
    - AUTH_PORT=8200
    expose:
      - 8100
    ports:
      - target: 8100
        published: 8100
        protocol: tcp
        mode: host
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-server
      - discovery-server

  auth-server:
    container_name: auth-server
    build:
      context: ./auth
      dockerfile: Dockerfile
      args:
        jarName: auth
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: auth-server:latest
    environment:
      - DISCOVERY_HOST=discovery-server
      - DISCOVERY_PORT=8761
      - MYSQL_HOST=auth_db-server
      - MYSQL_PORT=3306
    expose:
      - 8200
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-server
      - discovery-server
      - auth_db

  product-server:
    container_name: product-server
    build:
      context: ./product
      dockerfile: Dockerfile
      args:
        jarName: product
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: product-server:latest
    environment:
      - DISCOVERY_HOST=discovery-server
      - DISCOVERY_PORT=8761
      - MYSQL_HOST=prod_db-server
      - MYSQL_PORT=3306
    expose:
      - 8500
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-server
      - discovery-server
      - prod_db