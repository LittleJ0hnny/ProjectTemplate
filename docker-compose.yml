version: '3.7'

networks:
  mp-network:

services:

  auth_db:
    #Container name used as image name and host name for current container.
    container_name: auth_db-service
    image: mysql/mysql-server:8.0.13
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=cred_db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    expose:
      - 3306
    networks:
      - mp-network
    tty:
      true

  prod_db:
    container_name: prod_db-service
    image: mysql/mysql-server:8.0.13
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=prod_db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    expose:
      - 3306
    networks:
      - mp-network
    tty:
      true

  order_db:
    container_name: order_db-service
    image: mysql/mysql-server:8.0.13
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=order_db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    expose:
      - 3306
    networks:
      - mp-network
    tty:
      true

  operation_db:
    container_name: operation_db-service
    image: mysql/mysql-server:8.0.13
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=operation_db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    expose:
      - 3306
    networks:
      - mp-network
    tty:
      true

  config-sevice:
    container_name: config-service
    build:
      context: ./config-service
      dockerfile: Dockerfile
      args:
        jarName: config-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: config-service:latest
    environment:
      - DISCOVERY_HOST=discovery-service
      - DISCOVERY_PORT=8761
    expose:
      - 8888
    networks:
      - mp-network
    tty:
      true

  discovery-service:
    container_name: discovery-service
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
      args:
        jarName: discovery-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: discovery-service:latest
    environment:
      - CONFIG_HOST=config-service
      - CONFIG_PORT=8888
    expose:
      - 8761
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-service

  gateway:
    container_name: gateway-service
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
      args:
        jarName: gateway-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: gateway-service-container:latest
    environment:
    - DISCOVERY_HOST=discovery-service
    - DISCOVERY_PORT=8761
    - AUTH_HOST=auth-service
    - AUTH_PORT=8200
    expose:
      - 8100
    ports:
      - target: 8100
        published: 8100
        protocol: tcp
        mode: host
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-service
      - discovery-service

  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
      args:
        jarName: auth-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: auth-service:latest
    environment:
      - DISCOVERY_HOST=discovery-service
      - DISCOVERY_PORT=8761
      - MYSQL_HOST=auth_db-service
      - MYSQL_PORT=3306
    expose:
      - 8200
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-service
      - discovery-service
      - auth_db

  product-service:
    container_name: product-service
    build:
      context: ./product-service
      dockerfile: Dockerfile
      args:
        jarName: product-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: product-service:latest
    environment:
      - DISCOVERY_HOST=discovery-service
      - DISCOVERY_PORT=8761
      - MYSQL_HOST=prod_db-service
      - MYSQL_PORT=3306
    expose:
      - 8500
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-service
      - discovery-service
      - prod_db

  order-service:
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
      args:
        jarName: order-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: order-service:latest
    environment:
      - DISCOVERY_HOST=discovery-service
      - DISCOVERY_PORT=8761
      - MYSQL_HOST=prod_db-service
      - MYSQL_PORT=3306
    expose:
      - 8600
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-service
      - discovery-service
      - order_db

  operation-service:
    container_name: operation-service
    build:
      context: ./operation-service
      dockerfile: Dockerfile
      args:
        jarName: operation-service
        jarVersion: 1.0-SNAPSHOT
        bootstrapFile: bootstrap.sh
    image: operation-service:latest
    environment:
      - DISCOVERY_HOST=discovery-service
      - DISCOVERY_PORT=8761
      - MYSQL_HOST=prod_db-service
      - MYSQL_PORT=3306
    expose:
      - 8700
    networks:
      - mp-network
    tty:
      true
    depends_on:
      - config-service
      - discovery-service
      - operation_db